#include "ItemType.h"

struct NodeType
{
  ItemType info;
  NodeType* next;
};


class SortedType
{
 public:
  SortedType();
  // Purpose: To construct object
  // Input: none
  // Pre: none
  // Output: none
  // Post: object is created
  // Note: none
  
  ~SortedType();
  // Purpose: To deconstruct object
  // Input: none
  // Pre: object is created
  // Output: none
  // Post: object is deconstructed
  // Note: none
  
  SortedType(const SortedType& otherList);
  // Purpose: To copy an object
  // Input: otherlist
  // Pre: otherlist must be created
  // Output: SortedType
  // Post: a deep copy is made of other list
  // Note: none
  
  bool IsFull() const;
  // Purpose: To determin if list is full
  // Input: none 
  // Pre: object must be created
  // Output: bool 
  // Post: bool is returned 
  // Note: none
  
  int  LengthIs() const;
  // Purpose: To determin length os list
  // Input: none
  // Pre: object is created
  // Output: int
  // Post: length is returned
  // Note: none
  
  void MakeEmpty();
  // Purpose: To make list empty
  // Input: none
  // Pre: object is created
  // Output: none
  // Post: list is empty
  // Note: none
  
  void RetrieveItem(ItemType& item, bool& found);
  // Purpose: To retrieve item
  // Input: item , found
  // Pre: object is created and list is not empty
  // Output: none
  // Post: Item is found or message is output
  // Note: none
  
  void InsertItem(ItemType item); 
  // Purpose: To insert item
  // Input: item
  // Pre: object is created and list is not full
  // Output: none
  // Post: object is inserted
  // Note: none
  
  void DeleteItem(ItemType item);
  // Purpose: To delete item 
  // Input: item
  // Pre: object is created and list is not empty
  // Output: none
  // Post: item is deleated
  // Note: none
  
  void ResetList();
  // Purpose: To set current position to front of list
  // Input: none
  // Pre: object is created
  // Output: none
  // Post: current possition is reset
  // Note: none
  
  void GetNextItem(ItemType& item);
  // Purpose: To get next item in list
  // Input: item
  // Pre: object is created 
  // Output: none
  // Post: next item is retrieved 
  // Note: none
  
  void Print(ofstream& outFile); 
  // Purpose: To print list
  // Input: outFile
  // Pre: object is created and list is not empty
  // Output: none
  // Post: list is printed
  // Note: none

 private:
  NodeType* listData;
  int length;
  NodeType* currentPos;
};
