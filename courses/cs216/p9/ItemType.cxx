#include <fstream> #include <iostream> #include <string> #include <iomanip> #include "ItemType.h"using namespace std;void ItemType::WriteItemToFile (ofstream& outFile) // Purpose: To output an item to the file.// Input: outFile.// Pre: item must exist and outfile must be open.// Output: none// Post: item is output.// Note: none{    outFile << idis() << " " <<  gradeis() << endl;}void ItemType::setStudent(int inStudentID, char inGrade, char inMajor, char inGender)// Purpose: To set all private variables to new data.// Input: inStudentID, inGender, inGrade, inMajor// Pre: item must exist and all inputs must have data.// Output: none// Post: all new values have been set.// Note: none{    studId = inStudentID;    grade = inGrade;    major = inMajor;    gender = inGender;}void ItemType::setID(int id)// Purpose: To set studID to new data.// Input: id// Pre: item must exist and all inputs must have data.// Output: none// Post: new value set to studID// Note: none{	studId = id;}int ItemType::idis() const// Purpose: To return studID // Input: none// Pre: item must exist // Output: int// Post: studID is returned // Note: none{    return studId;}    char ItemType::gradeis() const// Purpose: To return grade// Input: none// Pre: item must exist // Output: char// Post: grade is returned // Note: none{    return grade;}  char ItemType::majoris() const// Purpose: To return major// Input: none// Pre: item must exist // Output: char// Post: major is returned // Note: none{    return major;}  char ItemType::genderis() const// Purpose: To return gender// Input: none// Pre: item must exist // Output: char// Post: gender is returned // Note: none{    return gender;}RelationType ItemType::ComparedTo(ItemType& item) const// Purpose: To compare to items of the same type.// Input: info.// Pre: both Objects are constructed, and all values are assigned a value.// Output: bool.// Post: Items are compared and a bool is returned.// Note: none    {      if(studId < item.idis())        return LESS;      else if (studId > item.idis())        return GREATER;      else         return EQUAL;        }